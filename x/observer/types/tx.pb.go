// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: musechain/musecore/observer/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	chains "github.com/RWAs-labs/muse/pkg/chains"
	proofs "github.com/RWAs-labs/muse/pkg/proofs"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgUpdateObserver struct {
	Creator            string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	OldObserverAddress string               `protobuf:"bytes,2,opt,name=old_observer_address,json=oldObserverAddress,proto3" json:"old_observer_address,omitempty"`
	NewObserverAddress string               `protobuf:"bytes,3,opt,name=new_observer_address,json=newObserverAddress,proto3" json:"new_observer_address,omitempty"`
	UpdateReason       ObserverUpdateReason `protobuf:"varint,4,opt,name=update_reason,json=updateReason,proto3,enum=musechain.musecore.observer.ObserverUpdateReason" json:"update_reason,omitempty"`
}

func (m *MsgUpdateObserver) Reset()         { *m = MsgUpdateObserver{} }
func (m *MsgUpdateObserver) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateObserver) ProtoMessage()    {}
func (*MsgUpdateObserver) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{0}
}
func (m *MsgUpdateObserver) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateObserver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateObserver.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateObserver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateObserver.Merge(m, src)
}
func (m *MsgUpdateObserver) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateObserver) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateObserver.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateObserver proto.InternalMessageInfo

func (m *MsgUpdateObserver) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateObserver) GetOldObserverAddress() string {
	if m != nil {
		return m.OldObserverAddress
	}
	return ""
}

func (m *MsgUpdateObserver) GetNewObserverAddress() string {
	if m != nil {
		return m.NewObserverAddress
	}
	return ""
}

func (m *MsgUpdateObserver) GetUpdateReason() ObserverUpdateReason {
	if m != nil {
		return m.UpdateReason
	}
	return ObserverUpdateReason_Undefined
}

type MsgUpdateObserverResponse struct {
}

func (m *MsgUpdateObserverResponse) Reset()         { *m = MsgUpdateObserverResponse{} }
func (m *MsgUpdateObserverResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateObserverResponse) ProtoMessage()    {}
func (*MsgUpdateObserverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{1}
}
func (m *MsgUpdateObserverResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateObserverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateObserverResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateObserverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateObserverResponse.Merge(m, src)
}
func (m *MsgUpdateObserverResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateObserverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateObserverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateObserverResponse proto.InternalMessageInfo

type MsgVoteBlockHeader struct {
	Creator   string            `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId   int64             `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	BlockHash []byte            `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Height    int64             `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Header    proofs.HeaderData `protobuf:"bytes,5,opt,name=header,proto3" json:"header"`
}

func (m *MsgVoteBlockHeader) Reset()         { *m = MsgVoteBlockHeader{} }
func (m *MsgVoteBlockHeader) String() string { return proto.CompactTextString(m) }
func (*MsgVoteBlockHeader) ProtoMessage()    {}
func (*MsgVoteBlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{2}
}
func (m *MsgVoteBlockHeader) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteBlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteBlockHeader.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteBlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteBlockHeader.Merge(m, src)
}
func (m *MsgVoteBlockHeader) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteBlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteBlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteBlockHeader proto.InternalMessageInfo

func (m *MsgVoteBlockHeader) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoteBlockHeader) GetChainId() int64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *MsgVoteBlockHeader) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *MsgVoteBlockHeader) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MsgVoteBlockHeader) GetHeader() proofs.HeaderData {
	if m != nil {
		return m.Header
	}
	return proofs.HeaderData{}
}

type MsgVoteBlockHeaderResponse struct {
	BallotCreated bool `protobuf:"varint,1,opt,name=ballot_created,json=ballotCreated,proto3" json:"ballot_created,omitempty"`
	VoteFinalized bool `protobuf:"varint,2,opt,name=vote_finalized,json=voteFinalized,proto3" json:"vote_finalized,omitempty"`
}

func (m *MsgVoteBlockHeaderResponse) Reset()         { *m = MsgVoteBlockHeaderResponse{} }
func (m *MsgVoteBlockHeaderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteBlockHeaderResponse) ProtoMessage()    {}
func (*MsgVoteBlockHeaderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{3}
}
func (m *MsgVoteBlockHeaderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteBlockHeaderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteBlockHeaderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteBlockHeaderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteBlockHeaderResponse.Merge(m, src)
}
func (m *MsgVoteBlockHeaderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteBlockHeaderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteBlockHeaderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteBlockHeaderResponse proto.InternalMessageInfo

func (m *MsgVoteBlockHeaderResponse) GetBallotCreated() bool {
	if m != nil {
		return m.BallotCreated
	}
	return false
}

func (m *MsgVoteBlockHeaderResponse) GetVoteFinalized() bool {
	if m != nil {
		return m.VoteFinalized
	}
	return false
}

type MsgUpdateChainParams struct {
	Creator     string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainParams *ChainParams `protobuf:"bytes,2,opt,name=chainParams,proto3" json:"chainParams,omitempty"`
}

func (m *MsgUpdateChainParams) Reset()         { *m = MsgUpdateChainParams{} }
func (m *MsgUpdateChainParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateChainParams) ProtoMessage()    {}
func (*MsgUpdateChainParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{4}
}
func (m *MsgUpdateChainParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateChainParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateChainParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateChainParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateChainParams.Merge(m, src)
}
func (m *MsgUpdateChainParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateChainParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateChainParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateChainParams proto.InternalMessageInfo

func (m *MsgUpdateChainParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateChainParams) GetChainParams() *ChainParams {
	if m != nil {
		return m.ChainParams
	}
	return nil
}

type MsgUpdateChainParamsResponse struct {
}

func (m *MsgUpdateChainParamsResponse) Reset()         { *m = MsgUpdateChainParamsResponse{} }
func (m *MsgUpdateChainParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateChainParamsResponse) ProtoMessage()    {}
func (*MsgUpdateChainParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{5}
}
func (m *MsgUpdateChainParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateChainParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateChainParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateChainParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateChainParamsResponse.Merge(m, src)
}
func (m *MsgUpdateChainParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateChainParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateChainParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateChainParamsResponse proto.InternalMessageInfo

type MsgUpdateOperationalChainParams struct {
	Creator                   string             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId                   int64              `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	GasPriceTicker            uint64             `protobuf:"varint,3,opt,name=gas_price_ticker,json=gasPriceTicker,proto3" json:"gas_price_ticker,omitempty"`
	InboundTicker             uint64             `protobuf:"varint,4,opt,name=inbound_ticker,json=inboundTicker,proto3" json:"inbound_ticker,omitempty"`
	OutboundTicker            uint64             `protobuf:"varint,5,opt,name=outbound_ticker,json=outboundTicker,proto3" json:"outbound_ticker,omitempty"`
	WatchUtxoTicker           uint64             `protobuf:"varint,6,opt,name=watch_utxo_ticker,json=watchUtxoTicker,proto3" json:"watch_utxo_ticker,omitempty"`
	OutboundScheduleInterval  int64              `protobuf:"varint,7,opt,name=outbound_schedule_interval,json=outboundScheduleInterval,proto3" json:"outbound_schedule_interval,omitempty"`
	OutboundScheduleLookahead int64              `protobuf:"varint,8,opt,name=outbound_schedule_lookahead,json=outboundScheduleLookahead,proto3" json:"outbound_schedule_lookahead,omitempty"`
	ConfirmationParams        ConfirmationParams `protobuf:"bytes,9,opt,name=confirmation_params,json=confirmationParams,proto3" json:"confirmation_params"`
	DisableTssBlockScan       bool               `protobuf:"varint,10,opt,name=disable_tss_block_scan,json=disableTssBlockScan,proto3" json:"disable_tss_block_scan,omitempty"`
}

func (m *MsgUpdateOperationalChainParams) Reset()         { *m = MsgUpdateOperationalChainParams{} }
func (m *MsgUpdateOperationalChainParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOperationalChainParams) ProtoMessage()    {}
func (*MsgUpdateOperationalChainParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{6}
}
func (m *MsgUpdateOperationalChainParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOperationalChainParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOperationalChainParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOperationalChainParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOperationalChainParams.Merge(m, src)
}
func (m *MsgUpdateOperationalChainParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOperationalChainParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOperationalChainParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOperationalChainParams proto.InternalMessageInfo

func (m *MsgUpdateOperationalChainParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateOperationalChainParams) GetChainId() int64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *MsgUpdateOperationalChainParams) GetGasPriceTicker() uint64 {
	if m != nil {
		return m.GasPriceTicker
	}
	return 0
}

func (m *MsgUpdateOperationalChainParams) GetInboundTicker() uint64 {
	if m != nil {
		return m.InboundTicker
	}
	return 0
}

func (m *MsgUpdateOperationalChainParams) GetOutboundTicker() uint64 {
	if m != nil {
		return m.OutboundTicker
	}
	return 0
}

func (m *MsgUpdateOperationalChainParams) GetWatchUtxoTicker() uint64 {
	if m != nil {
		return m.WatchUtxoTicker
	}
	return 0
}

func (m *MsgUpdateOperationalChainParams) GetOutboundScheduleInterval() int64 {
	if m != nil {
		return m.OutboundScheduleInterval
	}
	return 0
}

func (m *MsgUpdateOperationalChainParams) GetOutboundScheduleLookahead() int64 {
	if m != nil {
		return m.OutboundScheduleLookahead
	}
	return 0
}

func (m *MsgUpdateOperationalChainParams) GetConfirmationParams() ConfirmationParams {
	if m != nil {
		return m.ConfirmationParams
	}
	return ConfirmationParams{}
}

func (m *MsgUpdateOperationalChainParams) GetDisableTssBlockScan() bool {
	if m != nil {
		return m.DisableTssBlockScan
	}
	return false
}

type MsgUpdateOperationalChainParamsResponse struct {
}

func (m *MsgUpdateOperationalChainParamsResponse) Reset() {
	*m = MsgUpdateOperationalChainParamsResponse{}
}
func (m *MsgUpdateOperationalChainParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOperationalChainParamsResponse) ProtoMessage()    {}
func (*MsgUpdateOperationalChainParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{7}
}
func (m *MsgUpdateOperationalChainParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOperationalChainParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOperationalChainParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOperationalChainParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOperationalChainParamsResponse.Merge(m, src)
}
func (m *MsgUpdateOperationalChainParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOperationalChainParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOperationalChainParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOperationalChainParamsResponse proto.InternalMessageInfo

type MsgRemoveChainParams struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId int64  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (m *MsgRemoveChainParams) Reset()         { *m = MsgRemoveChainParams{} }
func (m *MsgRemoveChainParams) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveChainParams) ProtoMessage()    {}
func (*MsgRemoveChainParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{8}
}
func (m *MsgRemoveChainParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveChainParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveChainParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveChainParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveChainParams.Merge(m, src)
}
func (m *MsgRemoveChainParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveChainParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveChainParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveChainParams proto.InternalMessageInfo

func (m *MsgRemoveChainParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveChainParams) GetChainId() int64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

type MsgRemoveChainParamsResponse struct {
}

func (m *MsgRemoveChainParamsResponse) Reset()         { *m = MsgRemoveChainParamsResponse{} }
func (m *MsgRemoveChainParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveChainParamsResponse) ProtoMessage()    {}
func (*MsgRemoveChainParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{9}
}
func (m *MsgRemoveChainParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveChainParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveChainParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveChainParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveChainParamsResponse.Merge(m, src)
}
func (m *MsgRemoveChainParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveChainParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveChainParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveChainParamsResponse proto.InternalMessageInfo

type MsgAddObserver struct {
	Creator                 string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ObserverAddress         string `protobuf:"bytes,2,opt,name=observer_address,json=observerAddress,proto3" json:"observer_address,omitempty"`
	MuseclientGranteePubkey string `protobuf:"bytes,3,opt,name=museclient_grantee_pubkey,json=museclientGranteePubkey,proto3" json:"museclient_grantee_pubkey,omitempty"`
	AddNodeAccountOnly      bool   `protobuf:"varint,4,opt,name=add_node_account_only,json=addNodeAccountOnly,proto3" json:"add_node_account_only,omitempty"`
}

func (m *MsgAddObserver) Reset()         { *m = MsgAddObserver{} }
func (m *MsgAddObserver) String() string { return proto.CompactTextString(m) }
func (*MsgAddObserver) ProtoMessage()    {}
func (*MsgAddObserver) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{10}
}
func (m *MsgAddObserver) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddObserver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddObserver.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddObserver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddObserver.Merge(m, src)
}
func (m *MsgAddObserver) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddObserver) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddObserver.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddObserver proto.InternalMessageInfo

func (m *MsgAddObserver) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddObserver) GetObserverAddress() string {
	if m != nil {
		return m.ObserverAddress
	}
	return ""
}

func (m *MsgAddObserver) GetMuseclientGranteePubkey() string {
	if m != nil {
		return m.MuseclientGranteePubkey
	}
	return ""
}

func (m *MsgAddObserver) GetAddNodeAccountOnly() bool {
	if m != nil {
		return m.AddNodeAccountOnly
	}
	return false
}

type MsgAddObserverResponse struct {
}

func (m *MsgAddObserverResponse) Reset()         { *m = MsgAddObserverResponse{} }
func (m *MsgAddObserverResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddObserverResponse) ProtoMessage()    {}
func (*MsgAddObserverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{11}
}
func (m *MsgAddObserverResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddObserverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddObserverResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddObserverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddObserverResponse.Merge(m, src)
}
func (m *MsgAddObserverResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddObserverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddObserverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddObserverResponse proto.InternalMessageInfo

type MsgVoteBlame struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId   int64  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	BlameInfo Blame  `protobuf:"bytes,3,opt,name=blame_info,json=blameInfo,proto3" json:"blame_info"`
}

func (m *MsgVoteBlame) Reset()         { *m = MsgVoteBlame{} }
func (m *MsgVoteBlame) String() string { return proto.CompactTextString(m) }
func (*MsgVoteBlame) ProtoMessage()    {}
func (*MsgVoteBlame) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{12}
}
func (m *MsgVoteBlame) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteBlame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteBlame.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteBlame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteBlame.Merge(m, src)
}
func (m *MsgVoteBlame) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteBlame) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteBlame.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteBlame proto.InternalMessageInfo

func (m *MsgVoteBlame) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoteBlame) GetChainId() int64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *MsgVoteBlame) GetBlameInfo() Blame {
	if m != nil {
		return m.BlameInfo
	}
	return Blame{}
}

type MsgVoteBlameResponse struct {
}

func (m *MsgVoteBlameResponse) Reset()         { *m = MsgVoteBlameResponse{} }
func (m *MsgVoteBlameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteBlameResponse) ProtoMessage()    {}
func (*MsgVoteBlameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{13}
}
func (m *MsgVoteBlameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteBlameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteBlameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteBlameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteBlameResponse.Merge(m, src)
}
func (m *MsgVoteBlameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteBlameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteBlameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteBlameResponse proto.InternalMessageInfo

type MsgUpdateKeygen struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Block   int64  `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (m *MsgUpdateKeygen) Reset()         { *m = MsgUpdateKeygen{} }
func (m *MsgUpdateKeygen) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKeygen) ProtoMessage()    {}
func (*MsgUpdateKeygen) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{14}
}
func (m *MsgUpdateKeygen) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKeygen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKeygen.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKeygen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKeygen.Merge(m, src)
}
func (m *MsgUpdateKeygen) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKeygen) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKeygen.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKeygen proto.InternalMessageInfo

func (m *MsgUpdateKeygen) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateKeygen) GetBlock() int64 {
	if m != nil {
		return m.Block
	}
	return 0
}

type MsgUpdateKeygenResponse struct {
}

func (m *MsgUpdateKeygenResponse) Reset()         { *m = MsgUpdateKeygenResponse{} }
func (m *MsgUpdateKeygenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKeygenResponse) ProtoMessage()    {}
func (*MsgUpdateKeygenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{15}
}
func (m *MsgUpdateKeygenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKeygenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKeygenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKeygenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKeygenResponse.Merge(m, src)
}
func (m *MsgUpdateKeygenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKeygenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKeygenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKeygenResponse proto.InternalMessageInfo

type MsgResetChainNonces struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId        int64  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ChainNonceLow  int64  `protobuf:"varint,3,opt,name=chain_nonce_low,json=chainNonceLow,proto3" json:"chain_nonce_low,omitempty"`
	ChainNonceHigh int64  `protobuf:"varint,4,opt,name=chain_nonce_high,json=chainNonceHigh,proto3" json:"chain_nonce_high,omitempty"`
}

func (m *MsgResetChainNonces) Reset()         { *m = MsgResetChainNonces{} }
func (m *MsgResetChainNonces) String() string { return proto.CompactTextString(m) }
func (*MsgResetChainNonces) ProtoMessage()    {}
func (*MsgResetChainNonces) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{16}
}
func (m *MsgResetChainNonces) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetChainNonces) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetChainNonces.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetChainNonces) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetChainNonces.Merge(m, src)
}
func (m *MsgResetChainNonces) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetChainNonces) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetChainNonces.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetChainNonces proto.InternalMessageInfo

func (m *MsgResetChainNonces) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgResetChainNonces) GetChainId() int64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *MsgResetChainNonces) GetChainNonceLow() int64 {
	if m != nil {
		return m.ChainNonceLow
	}
	return 0
}

func (m *MsgResetChainNonces) GetChainNonceHigh() int64 {
	if m != nil {
		return m.ChainNonceHigh
	}
	return 0
}

type MsgResetChainNoncesResponse struct {
}

func (m *MsgResetChainNoncesResponse) Reset()         { *m = MsgResetChainNoncesResponse{} }
func (m *MsgResetChainNoncesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgResetChainNoncesResponse) ProtoMessage()    {}
func (*MsgResetChainNoncesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{17}
}
func (m *MsgResetChainNoncesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetChainNoncesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetChainNoncesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetChainNoncesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetChainNoncesResponse.Merge(m, src)
}
func (m *MsgResetChainNoncesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetChainNoncesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetChainNoncesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetChainNoncesResponse proto.InternalMessageInfo

type MsgVoteTSS struct {
	Creator          string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TssPubkey        string               `protobuf:"bytes,2,opt,name=tss_pubkey,json=tssPubkey,proto3" json:"tss_pubkey,omitempty"`
	KeygenMuseHeight int64                `protobuf:"varint,3,opt,name=keygen_muse_height,json=keygenMuseHeight,proto3" json:"keygen_muse_height,omitempty"`
	Status           chains.ReceiveStatus `protobuf:"varint,4,opt,name=status,proto3,enum=musechain.musecore.pkg.chains.ReceiveStatus" json:"status,omitempty"`
}

func (m *MsgVoteTSS) Reset()         { *m = MsgVoteTSS{} }
func (m *MsgVoteTSS) String() string { return proto.CompactTextString(m) }
func (*MsgVoteTSS) ProtoMessage()    {}
func (*MsgVoteTSS) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{18}
}
func (m *MsgVoteTSS) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteTSS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteTSS.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteTSS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteTSS.Merge(m, src)
}
func (m *MsgVoteTSS) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteTSS) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteTSS.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteTSS proto.InternalMessageInfo

func (m *MsgVoteTSS) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoteTSS) GetTssPubkey() string {
	if m != nil {
		return m.TssPubkey
	}
	return ""
}

func (m *MsgVoteTSS) GetKeygenMuseHeight() int64 {
	if m != nil {
		return m.KeygenMuseHeight
	}
	return 0
}

func (m *MsgVoteTSS) GetStatus() chains.ReceiveStatus {
	if m != nil {
		return m.Status
	}
	return chains.ReceiveStatus_created
}

type MsgVoteTSSResponse struct {
	BallotCreated bool `protobuf:"varint,1,opt,name=ballot_created,json=ballotCreated,proto3" json:"ballot_created,omitempty"`
	VoteFinalized bool `protobuf:"varint,2,opt,name=vote_finalized,json=voteFinalized,proto3" json:"vote_finalized,omitempty"`
	KeygenSuccess bool `protobuf:"varint,3,opt,name=keygen_success,json=keygenSuccess,proto3" json:"keygen_success,omitempty"`
}

func (m *MsgVoteTSSResponse) Reset()         { *m = MsgVoteTSSResponse{} }
func (m *MsgVoteTSSResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteTSSResponse) ProtoMessage()    {}
func (*MsgVoteTSSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{19}
}
func (m *MsgVoteTSSResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteTSSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteTSSResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteTSSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteTSSResponse.Merge(m, src)
}
func (m *MsgVoteTSSResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteTSSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteTSSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteTSSResponse proto.InternalMessageInfo

func (m *MsgVoteTSSResponse) GetBallotCreated() bool {
	if m != nil {
		return m.BallotCreated
	}
	return false
}

func (m *MsgVoteTSSResponse) GetVoteFinalized() bool {
	if m != nil {
		return m.VoteFinalized
	}
	return false
}

func (m *MsgVoteTSSResponse) GetKeygenSuccess() bool {
	if m != nil {
		return m.KeygenSuccess
	}
	return false
}

type MsgEnableCCTX struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EnableInbound  bool   `protobuf:"varint,2,opt,name=enableInbound,proto3" json:"enableInbound,omitempty"`
	EnableOutbound bool   `protobuf:"varint,3,opt,name=enableOutbound,proto3" json:"enableOutbound,omitempty"`
}

func (m *MsgEnableCCTX) Reset()         { *m = MsgEnableCCTX{} }
func (m *MsgEnableCCTX) String() string { return proto.CompactTextString(m) }
func (*MsgEnableCCTX) ProtoMessage()    {}
func (*MsgEnableCCTX) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{20}
}
func (m *MsgEnableCCTX) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnableCCTX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnableCCTX.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnableCCTX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnableCCTX.Merge(m, src)
}
func (m *MsgEnableCCTX) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnableCCTX) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnableCCTX.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnableCCTX proto.InternalMessageInfo

func (m *MsgEnableCCTX) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEnableCCTX) GetEnableInbound() bool {
	if m != nil {
		return m.EnableInbound
	}
	return false
}

func (m *MsgEnableCCTX) GetEnableOutbound() bool {
	if m != nil {
		return m.EnableOutbound
	}
	return false
}

type MsgEnableCCTXResponse struct {
}

func (m *MsgEnableCCTXResponse) Reset()         { *m = MsgEnableCCTXResponse{} }
func (m *MsgEnableCCTXResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEnableCCTXResponse) ProtoMessage()    {}
func (*MsgEnableCCTXResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{21}
}
func (m *MsgEnableCCTXResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnableCCTXResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnableCCTXResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnableCCTXResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnableCCTXResponse.Merge(m, src)
}
func (m *MsgEnableCCTXResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnableCCTXResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnableCCTXResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnableCCTXResponse proto.InternalMessageInfo

type MsgDisableCCTX struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DisableInbound  bool   `protobuf:"varint,2,opt,name=disableInbound,proto3" json:"disableInbound,omitempty"`
	DisableOutbound bool   `protobuf:"varint,3,opt,name=disableOutbound,proto3" json:"disableOutbound,omitempty"`
}

func (m *MsgDisableCCTX) Reset()         { *m = MsgDisableCCTX{} }
func (m *MsgDisableCCTX) String() string { return proto.CompactTextString(m) }
func (*MsgDisableCCTX) ProtoMessage()    {}
func (*MsgDisableCCTX) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{22}
}
func (m *MsgDisableCCTX) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisableCCTX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisableCCTX.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisableCCTX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisableCCTX.Merge(m, src)
}
func (m *MsgDisableCCTX) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisableCCTX) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisableCCTX.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisableCCTX proto.InternalMessageInfo

func (m *MsgDisableCCTX) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDisableCCTX) GetDisableInbound() bool {
	if m != nil {
		return m.DisableInbound
	}
	return false
}

func (m *MsgDisableCCTX) GetDisableOutbound() bool {
	if m != nil {
		return m.DisableOutbound
	}
	return false
}

type MsgDisableCCTXResponse struct {
}

func (m *MsgDisableCCTXResponse) Reset()         { *m = MsgDisableCCTXResponse{} }
func (m *MsgDisableCCTXResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDisableCCTXResponse) ProtoMessage()    {}
func (*MsgDisableCCTXResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{23}
}
func (m *MsgDisableCCTXResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisableCCTXResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisableCCTXResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisableCCTXResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisableCCTXResponse.Merge(m, src)
}
func (m *MsgDisableCCTXResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisableCCTXResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisableCCTXResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisableCCTXResponse proto.InternalMessageInfo

type MsgUpdateGasPriceIncreaseFlags struct {
	Creator               string                `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	GasPriceIncreaseFlags GasPriceIncreaseFlags `protobuf:"bytes,2,opt,name=gasPriceIncreaseFlags,proto3" json:"gasPriceIncreaseFlags"`
}

func (m *MsgUpdateGasPriceIncreaseFlags) Reset()         { *m = MsgUpdateGasPriceIncreaseFlags{} }
func (m *MsgUpdateGasPriceIncreaseFlags) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateGasPriceIncreaseFlags) ProtoMessage()    {}
func (*MsgUpdateGasPriceIncreaseFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{24}
}
func (m *MsgUpdateGasPriceIncreaseFlags) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateGasPriceIncreaseFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateGasPriceIncreaseFlags.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateGasPriceIncreaseFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateGasPriceIncreaseFlags.Merge(m, src)
}
func (m *MsgUpdateGasPriceIncreaseFlags) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateGasPriceIncreaseFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateGasPriceIncreaseFlags.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateGasPriceIncreaseFlags proto.InternalMessageInfo

func (m *MsgUpdateGasPriceIncreaseFlags) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateGasPriceIncreaseFlags) GetGasPriceIncreaseFlags() GasPriceIncreaseFlags {
	if m != nil {
		return m.GasPriceIncreaseFlags
	}
	return GasPriceIncreaseFlags{}
}

type MsgUpdateGasPriceIncreaseFlagsResponse struct {
}

func (m *MsgUpdateGasPriceIncreaseFlagsResponse) Reset() {
	*m = MsgUpdateGasPriceIncreaseFlagsResponse{}
}
func (m *MsgUpdateGasPriceIncreaseFlagsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateGasPriceIncreaseFlagsResponse) ProtoMessage()    {}
func (*MsgUpdateGasPriceIncreaseFlagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{25}
}
func (m *MsgUpdateGasPriceIncreaseFlagsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateGasPriceIncreaseFlagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateGasPriceIncreaseFlagsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateGasPriceIncreaseFlagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateGasPriceIncreaseFlagsResponse.Merge(m, src)
}
func (m *MsgUpdateGasPriceIncreaseFlagsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateGasPriceIncreaseFlagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateGasPriceIncreaseFlagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateGasPriceIncreaseFlagsResponse proto.InternalMessageInfo

type MsgUpdateOperationalFlags struct {
	Creator          string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	OperationalFlags OperationalFlags `protobuf:"bytes,2,opt,name=operational_flags,json=operationalFlags,proto3" json:"operational_flags"`
}

func (m *MsgUpdateOperationalFlags) Reset()         { *m = MsgUpdateOperationalFlags{} }
func (m *MsgUpdateOperationalFlags) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOperationalFlags) ProtoMessage()    {}
func (*MsgUpdateOperationalFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{26}
}
func (m *MsgUpdateOperationalFlags) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOperationalFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOperationalFlags.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOperationalFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOperationalFlags.Merge(m, src)
}
func (m *MsgUpdateOperationalFlags) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOperationalFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOperationalFlags.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOperationalFlags proto.InternalMessageInfo

func (m *MsgUpdateOperationalFlags) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateOperationalFlags) GetOperationalFlags() OperationalFlags {
	if m != nil {
		return m.OperationalFlags
	}
	return OperationalFlags{}
}

type MsgUpdateOperationalFlagsResponse struct {
}

func (m *MsgUpdateOperationalFlagsResponse) Reset()         { *m = MsgUpdateOperationalFlagsResponse{} }
func (m *MsgUpdateOperationalFlagsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOperationalFlagsResponse) ProtoMessage()    {}
func (*MsgUpdateOperationalFlagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{27}
}
func (m *MsgUpdateOperationalFlagsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOperationalFlagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOperationalFlagsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOperationalFlagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOperationalFlagsResponse.Merge(m, src)
}
func (m *MsgUpdateOperationalFlagsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOperationalFlagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOperationalFlagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOperationalFlagsResponse proto.InternalMessageInfo

// MsgDisableFastConfirmation is used to disable fast confirmation for given
// chain ID.
type MsgDisableFastConfirmation struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId int64  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (m *MsgDisableFastConfirmation) Reset()         { *m = MsgDisableFastConfirmation{} }
func (m *MsgDisableFastConfirmation) String() string { return proto.CompactTextString(m) }
func (*MsgDisableFastConfirmation) ProtoMessage()    {}
func (*MsgDisableFastConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{28}
}
func (m *MsgDisableFastConfirmation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisableFastConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisableFastConfirmation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisableFastConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisableFastConfirmation.Merge(m, src)
}
func (m *MsgDisableFastConfirmation) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisableFastConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisableFastConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisableFastConfirmation proto.InternalMessageInfo

func (m *MsgDisableFastConfirmation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDisableFastConfirmation) GetChainId() int64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

type MsgDisableFastConfirmationResponse struct {
}

func (m *MsgDisableFastConfirmationResponse) Reset()         { *m = MsgDisableFastConfirmationResponse{} }
func (m *MsgDisableFastConfirmationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDisableFastConfirmationResponse) ProtoMessage()    {}
func (*MsgDisableFastConfirmationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c50f7bd4dce3b1, []int{29}
}
func (m *MsgDisableFastConfirmationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisableFastConfirmationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisableFastConfirmationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisableFastConfirmationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisableFastConfirmationResponse.Merge(m, src)
}
func (m *MsgDisableFastConfirmationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisableFastConfirmationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisableFastConfirmationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisableFastConfirmationResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateObserver)(nil), "musechain.musecore.observer.MsgUpdateObserver")
	proto.RegisterType((*MsgUpdateObserverResponse)(nil), "musechain.musecore.observer.MsgUpdateObserverResponse")
	proto.RegisterType((*MsgVoteBlockHeader)(nil), "musechain.musecore.observer.MsgVoteBlockHeader")
	proto.RegisterType((*MsgVoteBlockHeaderResponse)(nil), "musechain.musecore.observer.MsgVoteBlockHeaderResponse")
	proto.RegisterType((*MsgUpdateChainParams)(nil), "musechain.musecore.observer.MsgUpdateChainParams")
	proto.RegisterType((*MsgUpdateChainParamsResponse)(nil), "musechain.musecore.observer.MsgUpdateChainParamsResponse")
	proto.RegisterType((*MsgUpdateOperationalChainParams)(nil), "musechain.musecore.observer.MsgUpdateOperationalChainParams")
	proto.RegisterType((*MsgUpdateOperationalChainParamsResponse)(nil), "musechain.musecore.observer.MsgUpdateOperationalChainParamsResponse")
	proto.RegisterType((*MsgRemoveChainParams)(nil), "musechain.musecore.observer.MsgRemoveChainParams")
	proto.RegisterType((*MsgRemoveChainParamsResponse)(nil), "musechain.musecore.observer.MsgRemoveChainParamsResponse")
	proto.RegisterType((*MsgAddObserver)(nil), "musechain.musecore.observer.MsgAddObserver")
	proto.RegisterType((*MsgAddObserverResponse)(nil), "musechain.musecore.observer.MsgAddObserverResponse")
	proto.RegisterType((*MsgVoteBlame)(nil), "musechain.musecore.observer.MsgVoteBlame")
	proto.RegisterType((*MsgVoteBlameResponse)(nil), "musechain.musecore.observer.MsgVoteBlameResponse")
	proto.RegisterType((*MsgUpdateKeygen)(nil), "musechain.musecore.observer.MsgUpdateKeygen")
	proto.RegisterType((*MsgUpdateKeygenResponse)(nil), "musechain.musecore.observer.MsgUpdateKeygenResponse")
	proto.RegisterType((*MsgResetChainNonces)(nil), "musechain.musecore.observer.MsgResetChainNonces")
	proto.RegisterType((*MsgResetChainNoncesResponse)(nil), "musechain.musecore.observer.MsgResetChainNoncesResponse")
	proto.RegisterType((*MsgVoteTSS)(nil), "musechain.musecore.observer.MsgVoteTSS")
	proto.RegisterType((*MsgVoteTSSResponse)(nil), "musechain.musecore.observer.MsgVoteTSSResponse")
	proto.RegisterType((*MsgEnableCCTX)(nil), "musechain.musecore.observer.MsgEnableCCTX")
	proto.RegisterType((*MsgEnableCCTXResponse)(nil), "musechain.musecore.observer.MsgEnableCCTXResponse")
	proto.RegisterType((*MsgDisableCCTX)(nil), "musechain.musecore.observer.MsgDisableCCTX")
	proto.RegisterType((*MsgDisableCCTXResponse)(nil), "musechain.musecore.observer.MsgDisableCCTXResponse")
	proto.RegisterType((*MsgUpdateGasPriceIncreaseFlags)(nil), "musechain.musecore.observer.MsgUpdateGasPriceIncreaseFlags")
	proto.RegisterType((*MsgUpdateGasPriceIncreaseFlagsResponse)(nil), "musechain.musecore.observer.MsgUpdateGasPriceIncreaseFlagsResponse")
	proto.RegisterType((*MsgUpdateOperationalFlags)(nil), "musechain.musecore.observer.MsgUpdateOperationalFlags")
	proto.RegisterType((*MsgUpdateOperationalFlagsResponse)(nil), "musechain.musecore.observer.MsgUpdateOperationalFlagsResponse")
	proto.RegisterType((*MsgDisableFastConfirmation)(nil), "musechain.musecore.observer.MsgDisableFastConfirmation")
	proto.RegisterType((*MsgDisableFastConfirmationResponse)(nil), "musechain.musecore.observer.MsgDisableFastConfirmationResponse")
}

func init() {
	proto.RegisterFile("musechain/musecore/observer/tx.proto", fileDescriptor_84c50f7bd4dce3b1)
}

var fileDescriptor_84c50f7bd4dce3b1 = []byte{
	// 1667 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x6f, 0xdb, 0x46,
	0x16, 0x37, 0xd7, 0xdf, 0xcf, 0x96, 0x64, 0x33, 0x8e, 0x2d, 0xd3, 0x89, 0x92, 0xf5, 0x26, 0xb6,
	0xec, 0x4d, 0xac, 0x58, 0xd9, 0xdd, 0xec, 0x66, 0x83, 0x2c, 0x1c, 0x7b, 0x63, 0xbb, 0x8d, 0xe3,
	0x80, 0x72, 0xd2, 0x8f, 0x0b, 0x3b, 0x22, 0xc7, 0x14, 0x6b, 0x8a, 0x23, 0x70, 0x28, 0x7f, 0xb4,
	0x40, 0xd1, 0x16, 0xe8, 0xa1, 0xb9, 0x34, 0x40, 0x6f, 0xbd, 0x14, 0x28, 0xd0, 0x4b, 0x4f, 0x39,
	0xf6, 0x3f, 0x68, 0x8e, 0x41, 0x2f, 0xed, 0xa9, 0x28, 0x92, 0x43, 0xfe, 0x84, 0x5e, 0x0b, 0x0e,
	0x87, 0x23, 0x8a, 0x92, 0x29, 0xd9, 0x69, 0x4f, 0x92, 0xde, 0xfc, 0x7e, 0xef, 0xfd, 0xde, 0xcc,
	0xe3, 0x9b, 0x47, 0xc1, 0xa5, 0x6a, 0x9d, 0x62, 0xbd, 0x82, 0x2c, 0xa7, 0xc0, 0xbe, 0x11, 0x17,
	0x17, 0x48, 0x99, 0x62, 0x77, 0x1f, 0xbb, 0x05, 0xef, 0x70, 0xa9, 0xe6, 0x12, 0x8f, 0xc8, 0x33,
	0x02, 0xb5, 0x14, 0xa2, 0x96, 0x42, 0x94, 0x32, 0x61, 0x12, 0x93, 0x30, 0x5c, 0xc1, 0xff, 0x16,
	0x50, 0x94, 0xf9, 0x24, 0xc7, 0x65, 0x1b, 0x55, 0x31, 0x07, 0x16, 0x93, 0x80, 0xba, 0x4b, 0x28,
	0x65, 0x8b, 0xda, 0xae, 0x8d, 0x4c, 0xca, 0x39, 0x8b, 0x49, 0x9c, 0xf0, 0x0b, 0xc7, 0xe6, 0x93,
	0xb0, 0x35, 0xe4, 0xa2, 0x6a, 0xe8, 0xf5, 0x5a, 0x22, 0x12, 0x3b, 0x86, 0xe5, 0x98, 0x9a, 0x43,
	0x1c, 0x1d, 0x87, 0x8c, 0xcb, 0x89, 0xbb, 0x47, 0x43, 0xd8, 0xd5, 0x44, 0xb9, 0x35, 0xec, 0x22,
	0xcf, 0x22, 0x0e, 0xb2, 0x39, 0xfc, 0x9f, 0x89, 0x3b, 0x42, 0x9c, 0x5d, 0xcb, 0xad, 0x32, 0x86,
	0xd6, 0x24, 0xbf, 0xdd, 0xa6, 0xd4, 0xf6, 0xcc, 0x02, 0x33, 0x51, 0xfe, 0xd1, 0x01, 0x5b, 0x73,
	0x09, 0xd9, 0xa5, 0xfc, 0x83, 0x63, 0xa7, 0x74, 0x42, 0xab, 0x84, 0x16, 0xaa, 0xd4, 0x2c, 0xec,
	0x2f, 0xfb, 0x1f, 0xc1, 0xc2, 0xec, 0x6f, 0x12, 0x8c, 0x6f, 0x51, 0xf3, 0x61, 0xcd, 0x40, 0x1e,
	0xde, 0xe6, 0x02, 0xe5, 0x2c, 0x0c, 0xea, 0x2e, 0x46, 0x1e, 0x71, 0xb3, 0xd2, 0x45, 0x29, 0x3f,
	0xac, 0x86, 0x3f, 0xe5, 0x6b, 0x30, 0x41, 0x6c, 0x43, 0x0b, 0x53, 0xd1, 0x90, 0x61, 0xb8, 0x98,
	0xd2, 0xec, 0x5f, 0x18, 0x4c, 0x26, 0xb6, 0x11, 0x3a, 0x59, 0x09, 0x56, 0x7c, 0x86, 0x83, 0x0f,
	0x5a, 0x19, 0xbd, 0x01, 0xc3, 0xc1, 0x07, 0x71, 0xc6, 0x23, 0x48, 0xd5, 0x99, 0x1e, 0xcd, 0xc5,
	0x88, 0x12, 0x27, 0xdb, 0x77, 0x51, 0xca, 0xa7, 0x8b, 0xcb, 0x4b, 0x09, 0x15, 0xbc, 0x14, 0x3a,
	0x09, 0x32, 0x51, 0x19, 0x51, 0x1d, 0xad, 0x47, 0x7e, 0xdd, 0x1c, 0xfd, 0xf4, 0xd5, 0xd3, 0xc5,
	0x30, 0x93, 0xd9, 0x19, 0x98, 0x6e, 0x49, 0x5c, 0xc5, 0xb4, 0x46, 0x1c, 0x8a, 0x67, 0x7f, 0x92,
	0x40, 0xde, 0xa2, 0xe6, 0x23, 0xe2, 0xe1, 0x3b, 0x36, 0xd1, 0xf7, 0x36, 0x30, 0x32, 0x12, 0xf7,
	0x65, 0x1a, 0x86, 0x82, 0x12, 0xb7, 0x0c, 0xb6, 0x17, 0xbd, 0xea, 0x20, 0xfb, 0xbd, 0x69, 0xc8,
	0xe7, 0x01, 0xca, 0xbe, 0x0f, 0xad, 0x82, 0x68, 0x85, 0xa5, 0x3d, 0xaa, 0x0e, 0x33, 0xcb, 0x06,
	0xa2, 0x15, 0x79, 0x12, 0x06, 0x2a, 0xd8, 0x32, 0x2b, 0x1e, 0x4b, 0xb3, 0x57, 0xe5, 0xbf, 0xe4,
	0x75, 0xdf, 0xee, 0x47, 0xcd, 0xf6, 0x5f, 0x94, 0xf2, 0x23, 0xc5, 0x85, 0x76, 0xe9, 0xd7, 0xf6,
	0xd8, 0x41, 0xfa, 0x07, 0x1d, 0x48, 0x5c, 0x43, 0x1e, 0xba, 0xd3, 0xf7, 0xec, 0x97, 0x0b, 0x3d,
	0x2a, 0xa7, 0xc7, 0xd2, 0x7e, 0x1f, 0x94, 0xd6, 0xc4, 0xc2, 0xbc, 0xe5, 0xcb, 0x90, 0x2e, 0x23,
	0xdb, 0x26, 0x9e, 0xc6, 0xf0, 0xd8, 0x60, 0x79, 0x0e, 0xa9, 0xa9, 0xc0, 0xba, 0x1a, 0x18, 0x7d,
	0xd8, 0x3e, 0xf1, 0xb0, 0xb6, 0x6b, 0x39, 0xc8, 0xb6, 0x3e, 0xc0, 0x41, 0xce, 0x43, 0x6a, 0xca,
	0xb7, 0xde, 0x0d, 0x8d, 0xb3, 0x8f, 0x25, 0x98, 0x10, 0x7b, 0xbc, 0xea, 0x2b, 0x7f, 0xc0, 0x8a,
	0x3d, 0x61, 0x1f, 0xdf, 0x80, 0x11, 0xbd, 0x01, 0x64, 0x6e, 0x47, 0x8a, 0xf9, 0xc4, 0x93, 0x8f,
	0x38, 0x56, 0xa3, 0xe4, 0x58, 0xe2, 0x39, 0x38, 0xd7, 0x4e, 0x8b, 0x38, 0xf2, 0x6f, 0xfb, 0xe0,
	0x42, 0xa3, 0x20, 0x1a, 0x0f, 0x74, 0x77, 0xba, 0x13, 0xce, 0x3f, 0x0f, 0x63, 0x26, 0xa2, 0x5a,
	0xcd, 0xb5, 0x74, 0xac, 0x79, 0x96, 0xbe, 0x87, 0x5d, 0x56, 0x05, 0x7d, 0x6a, 0xda, 0x44, 0xf4,
	0x81, 0x6f, 0xde, 0x61, 0x56, 0x7f, 0x5b, 0x2d, 0xa7, 0x4c, 0xea, 0x8e, 0x11, 0xe2, 0xfa, 0x18,
	0x2e, 0xc5, 0xad, 0x1c, 0x36, 0x0f, 0x19, 0x52, 0xf7, 0x9a, 0x70, 0xfd, 0x81, 0xbf, 0xd0, 0xcc,
	0x81, 0x8b, 0x30, 0x7e, 0x80, 0x3c, 0xbd, 0xa2, 0xd5, 0xbd, 0x43, 0x12, 0x42, 0x07, 0x18, 0x34,
	0xc3, 0x16, 0x1e, 0x7a, 0x87, 0x84, 0x63, 0x6f, 0x81, 0x22, 0x9c, 0x52, 0xbd, 0x82, 0x8d, 0xba,
	0x8d, 0x35, 0xcb, 0xf1, 0xb0, 0xbb, 0x8f, 0xec, 0xec, 0x20, 0x4b, 0x29, 0x1b, 0x22, 0x4a, 0x1c,
	0xb0, 0xc9, 0xd7, 0xe5, 0xdb, 0x30, 0xd3, 0xca, 0xb6, 0x09, 0xd9, 0x43, 0x7e, 0x11, 0x66, 0x87,
	0x18, 0x7d, 0x3a, 0x4e, 0xbf, 0x17, 0x02, 0xe4, 0x5d, 0x38, 0xd3, 0xa6, 0x29, 0x66, 0x87, 0xd9,
	0xf1, 0x17, 0x92, 0x8f, 0x3f, 0xc2, 0x0b, 0x8e, 0x89, 0xd7, 0xbf, 0xac, 0xb7, 0xac, 0xc8, 0xd7,
	0x61, 0xd2, 0xb0, 0x28, 0x2a, 0xdb, 0x58, 0xf3, 0x28, 0xd5, 0x82, 0xe7, 0x92, 0xea, 0xc8, 0xc9,
	0x02, 0x2b, 0xe0, 0x33, 0x7c, 0x75, 0x87, 0x52, 0xf6, 0x78, 0x94, 0x74, 0x14, 0xef, 0x1b, 0x0b,
	0x30, 0xdf, 0xa1, 0x4c, 0x44, 0x49, 0xbd, 0xc3, 0xca, 0x5f, 0xc5, 0x55, 0xb2, 0x8f, 0x5f, 0xb7,
	0x8c, 0xda, 0x56, 0x73, 0x8b, 0x6b, 0x11, 0xfa, 0x47, 0x09, 0xd2, 0x5b, 0xd4, 0x5c, 0x31, 0x8c,
	0x2e, 0x9a, 0xfa, 0x02, 0x8c, 0x1d, 0xd3, 0xd0, 0x33, 0x24, 0xd6, 0x9b, 0x6f, 0xc2, 0x34, 0x3b,
	0x02, 0xdb, 0xc2, 0x8e, 0xa7, 0x99, 0x2e, 0x72, 0x3c, 0x8c, 0xb5, 0x5a, 0xbd, 0xbc, 0x87, 0x8f,
	0x78, 0x4b, 0x9f, 0x6a, 0x00, 0xd6, 0x83, 0xf5, 0x07, 0x6c, 0x59, 0x5e, 0x86, 0xb3, 0xc8, 0x30,
	0x34, 0x87, 0x18, 0x58, 0x43, 0xba, 0x4e, 0xea, 0x8e, 0xa7, 0x11, 0xc7, 0x3e, 0x62, 0x55, 0x3e,
	0xa4, 0xca, 0xc8, 0x30, 0xee, 0x13, 0x03, 0xaf, 0x04, 0x4b, 0xdb, 0x8e, 0x7d, 0x14, 0x4b, 0x3a,
	0x0b, 0x93, 0xcd, 0x39, 0x89, 0x74, 0xbf, 0x92, 0x60, 0x54, 0xb4, 0x35, 0x54, 0xc5, 0xa7, 0x7b,
	0x52, 0xd7, 0xfd, 0x4e, 0x8d, 0xaa, 0x7e, 0xdd, 0xef, 0x12, 0x96, 0xcd, 0x48, 0x71, 0x36, 0xb1,
	0xf8, 0x58, 0x30, 0x5e, 0x6f, 0xc3, 0x8c, 0xbb, 0xe9, 0xec, 0x92, 0x98, 0xec, 0x49, 0x56, 0x06,
	0x42, 0x9b, 0x10, 0xbd, 0x0d, 0x19, 0x51, 0x49, 0x6f, 0xe2, 0x23, 0x13, 0x3b, 0x09, 0xb2, 0x27,
	0xa0, 0x9f, 0x55, 0x2b, 0xd7, 0x1c, 0xfc, 0x88, 0x05, 0x9a, 0x86, 0xa9, 0x98, 0x43, 0x11, 0xeb,
	0x3b, 0x09, 0xce, 0xb0, 0x82, 0xa1, 0xd8, 0x63, 0xf5, 0x72, 0x9f, 0xcd, 0x40, 0xa7, 0xdb, 0xa7,
	0x39, 0xc8, 0x04, 0x4b, 0x6c, 0x90, 0xd2, 0x6c, 0x72, 0xc0, 0x36, 0xab, 0x57, 0x4d, 0xe9, 0xc2,
	0xf5, 0x3d, 0x72, 0xe0, 0x77, 0xbe, 0x28, 0xae, 0x62, 0x99, 0x15, 0x7e, 0xc9, 0xa5, 0x1b, 0xc0,
	0x0d, 0xcb, 0xac, 0xc4, 0xf2, 0x38, 0x0f, 0x33, 0x6d, 0xb4, 0x8a, 0x5c, 0x7e, 0x90, 0x00, 0xf8,
	0x86, 0xee, 0x94, 0x4a, 0x09, 0x29, 0x9c, 0x07, 0xf0, 0x9f, 0x72, 0x5e, 0x9d, 0x41, 0x45, 0x0f,
	0x7b, 0x94, 0xf2, 0x7a, 0xbc, 0x02, 0xf2, 0x1e, 0xdb, 0x25, 0xcd, 0x3f, 0x58, 0x8d, 0xdf, 0xc2,
	0x41, 0x26, 0x63, 0xc1, 0xca, 0x56, 0x9d, 0xe2, 0x8d, 0xe0, 0x3e, 0x5e, 0x83, 0x01, 0xea, 0x21,
	0xaf, 0x4e, 0xf9, 0x38, 0x72, 0xe5, 0xb8, 0xfb, 0x98, 0x0f, 0x69, 0x2a, 0xd6, 0xb1, 0xb5, 0x8f,
	0x4b, 0x8c, 0xa3, 0x72, 0x6e, 0x2c, 0xd1, 0xcf, 0x1b, 0x63, 0xc6, 0x4e, 0xa9, 0xf4, 0xe7, 0xdc,
	0xc2, 0x3e, 0x8c, 0xa7, 0x49, 0xeb, 0xba, 0x1e, 0x8e, 0x5e, 0x43, 0x6a, 0x2a, 0xb0, 0x96, 0x02,
	0xe3, 0xec, 0x67, 0x12, 0xa4, 0xb6, 0xa8, 0xf9, 0x7f, 0xc7, 0xef, 0x7f, 0xab, 0xab, 0x3b, 0x6f,
	0x27, 0x6c, 0xec, 0x25, 0x48, 0x61, 0x86, 0xdb, 0x0c, 0x2e, 0xa6, 0x30, 0x70, 0x93, 0x51, 0x9e,
	0x83, 0x74, 0x60, 0xd8, 0xe6, 0x7d, 0x9f, 0x07, 0x8e, 0x59, 0x63, 0x7b, 0x32, 0x05, 0x67, 0x9b,
	0x64, 0x88, 0x63, 0x7f, 0x1c, 0xb4, 0xb4, 0xb5, 0xa0, 0x43, 0x77, 0x50, 0x38, 0x07, 0x69, 0xde,
	0xca, 0x9b, 0x25, 0xc6, 0xac, 0x72, 0x1e, 0x32, 0xdc, 0x12, 0x13, 0x19, 0x37, 0xb7, 0x6d, 0x45,
	0x11, 0x2d, 0x42, 0xe6, 0xf7, 0x12, 0xe4, 0xc4, 0x53, 0xb8, 0xce, 0x2f, 0xf8, 0x4d, 0xc7, 0x27,
	0x52, 0x7c, 0xd7, 0x7f, 0x01, 0x4a, 0x90, 0xed, 0xc0, 0x59, 0xb3, 0x1d, 0x85, 0x0f, 0x42, 0xc5,
	0xc4, 0x66, 0xd4, 0x36, 0x18, 0x6f, 0x4e, 0xed, 0xdd, 0xc6, 0x92, 0xca, 0xc3, 0x5c, 0xb2, 0xf2,
	0xc6, 0xb0, 0x24, 0x45, 0xa7, 0xe7, 0xc6, 0x2d, 0xd8, 0x29, 0xbf, 0xf7, 0x60, 0x3c, 0xf2, 0xae,
	0x14, 0xbc, 0x0f, 0xf2, 0xdc, 0xae, 0x26, 0x8f, 0xf7, 0xb1, 0x18, 0x3c, 0xad, 0x31, 0x12, 0xb3,
	0xc7, 0x32, 0xfa, 0x1b, 0xfc, 0xf5, 0x58, 0x99, 0x22, 0x19, 0x8d, 0x8d, 0xc4, 0xfc, 0x2c, 0xef,
	0x22, 0xea, 0x45, 0x47, 0x8a, 0x3f, 0xe2, 0xb2, 0xbe, 0x04, 0xb3, 0xc7, 0x07, 0x08, 0x65, 0x14,
	0xbf, 0xc8, 0x40, 0xef, 0x16, 0x35, 0x65, 0x02, 0x23, 0xd1, 0x6b, 0xfb, 0xef, 0x89, 0xfb, 0xd2,
	0x7c, 0x1f, 0x2a, 0xd7, 0x4f, 0x00, 0x16, 0xed, 0xe6, 0x10, 0xd2, 0xb1, 0xf7, 0xbf, 0xa5, 0x4e,
	0x6e, 0x9a, 0xf1, 0xca, 0xbf, 0x4e, 0x86, 0x17, 0x91, 0x3f, 0x91, 0x60, 0xbc, 0xf5, 0xed, 0x60,
	0xb9, 0x3b, 0x6f, 0x11, 0x8a, 0xf2, 0x9f, 0x13, 0x53, 0x9a, 0x34, 0xb4, 0x8e, 0x68, 0x1d, 0x35,
	0xb4, 0x50, 0x3a, 0x6b, 0x38, 0x76, 0x5a, 0x93, 0x2d, 0x18, 0x6e, 0x8c, 0x2e, 0x0b, 0x9d, 0xfc,
	0x08, 0xa8, 0xb2, 0xdc, 0x35, 0x54, 0x84, 0x72, 0x61, 0xb4, 0x69, 0xe2, 0xb8, 0xd2, 0xdd, 0xce,
	0x05, 0x68, 0xe5, 0x1f, 0x27, 0x41, 0x8b, 0x98, 0x1f, 0x42, 0x26, 0xfe, 0x26, 0x5d, 0xe8, 0x4e,
	0xb9, 0x20, 0x28, 0x37, 0x4e, 0x48, 0x10, 0xc1, 0x3f, 0x82, 0xb1, 0x96, 0xa9, 0xe7, 0x5a, 0xe7,
	0xa3, 0x6a, 0x66, 0x28, 0xff, 0x3e, 0x29, 0x43, 0xc4, 0xd7, 0x61, 0x30, 0x9c, 0x54, 0xe6, 0xbb,
	0xc9, 0x61, 0xa7, 0x54, 0x52, 0x0a, 0x5d, 0x02, 0x45, 0x10, 0x1b, 0x20, 0x72, 0x71, 0x2f, 0x76,
	0xa2, 0x37, 0xb0, 0x4a, 0xb1, 0x7b, 0xac, 0x88, 0x46, 0x60, 0x24, 0x7a, 0x0b, 0x77, 0xec, 0x50,
	0x11, 0x70, 0xe7, 0x0e, 0xd5, 0xe6, 0x4e, 0x95, 0xbf, 0x94, 0x60, 0xea, 0xb8, 0xfe, 0x7c, 0xa3,
	0x4b, 0x87, 0x71, 0xa2, 0xf2, 0xbf, 0x53, 0x12, 0x85, 0xaa, 0xaf, 0x25, 0x98, 0x49, 0xba, 0xe6,
	0xff, 0xdb, 0xdd, 0xc3, 0xd2, 0x96, 0xac, 0xac, 0xbe, 0x06, 0x59, 0x28, 0x7c, 0x22, 0xc1, 0xe4,
	0x31, 0x77, 0x74, 0xb7, 0x2d, 0x3b, 0xc6, 0x53, 0x6e, 0x9f, 0x8e, 0x27, 0x24, 0x7d, 0x23, 0xc1,
	0xb9, 0xc4, 0xff, 0x58, 0x6e, 0x9d, 0x38, 0x40, 0xb4, 0x09, 0xaf, 0xbd, 0x0e, 0x3b, 0x14, 0xa9,
	0xf4, 0x7f, 0xfc, 0xea, 0xe9, 0xa2, 0x74, 0x67, 0xed, 0xd9, 0x8b, 0x9c, 0xf4, 0xfc, 0x45, 0x4e,
	0xfa, 0xf5, 0x45, 0x4e, 0x7a, 0xf2, 0x32, 0xd7, 0xf3, 0xfc, 0x65, 0xae, 0xe7, 0xe7, 0x97, 0xb9,
	0x9e, 0x77, 0x17, 0x4d, 0xcb, 0xab, 0xd4, 0xcb, 0x4b, 0x3a, 0xa9, 0x16, 0xd4, 0xb7, 0x56, 0xe8,
	0x55, 0x1b, 0x95, 0x29, 0xfb, 0x1b, 0xb6, 0x70, 0x18, 0xf9, 0xf7, 0xf8, 0xa8, 0x86, 0x69, 0x79,
	0x80, 0xfd, 0xd3, 0x7a, 0xfd, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0x97, 0x0a, 0xaa, 0xa7,
	0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	AddObserver(ctx context.Context, in *MsgAddObserver, opts ...grpc.CallOption) (*MsgAddObserverResponse, error)
	UpdateObserver(ctx context.Context, in *MsgUpdateObserver, opts ...grpc.CallOption) (*MsgUpdateObserverResponse, error)
	UpdateChainParams(ctx context.Context, in *MsgUpdateChainParams, opts ...grpc.CallOption) (*MsgUpdateChainParamsResponse, error)
	RemoveChainParams(ctx context.Context, in *MsgRemoveChainParams, opts ...grpc.CallOption) (*MsgRemoveChainParamsResponse, error)
	VoteBlame(ctx context.Context, in *MsgVoteBlame, opts ...grpc.CallOption) (*MsgVoteBlameResponse, error)
	UpdateKeygen(ctx context.Context, in *MsgUpdateKeygen, opts ...grpc.CallOption) (*MsgUpdateKeygenResponse, error)
	VoteBlockHeader(ctx context.Context, in *MsgVoteBlockHeader, opts ...grpc.CallOption) (*MsgVoteBlockHeaderResponse, error)
	ResetChainNonces(ctx context.Context, in *MsgResetChainNonces, opts ...grpc.CallOption) (*MsgResetChainNoncesResponse, error)
	VoteTSS(ctx context.Context, in *MsgVoteTSS, opts ...grpc.CallOption) (*MsgVoteTSSResponse, error)
	EnableCCTX(ctx context.Context, in *MsgEnableCCTX, opts ...grpc.CallOption) (*MsgEnableCCTXResponse, error)
	DisableCCTX(ctx context.Context, in *MsgDisableCCTX, opts ...grpc.CallOption) (*MsgDisableCCTXResponse, error)
	DisableFastConfirmation(ctx context.Context, in *MsgDisableFastConfirmation, opts ...grpc.CallOption) (*MsgDisableFastConfirmationResponse, error)
	UpdateGasPriceIncreaseFlags(ctx context.Context, in *MsgUpdateGasPriceIncreaseFlags, opts ...grpc.CallOption) (*MsgUpdateGasPriceIncreaseFlagsResponse, error)
	UpdateOperationalFlags(ctx context.Context, in *MsgUpdateOperationalFlags, opts ...grpc.CallOption) (*MsgUpdateOperationalFlagsResponse, error)
	UpdateOperationalChainParams(ctx context.Context, in *MsgUpdateOperationalChainParams, opts ...grpc.CallOption) (*MsgUpdateOperationalChainParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AddObserver(ctx context.Context, in *MsgAddObserver, opts ...grpc.CallOption) (*MsgAddObserverResponse, error) {
	out := new(MsgAddObserverResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/AddObserver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateObserver(ctx context.Context, in *MsgUpdateObserver, opts ...grpc.CallOption) (*MsgUpdateObserverResponse, error) {
	out := new(MsgUpdateObserverResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/UpdateObserver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateChainParams(ctx context.Context, in *MsgUpdateChainParams, opts ...grpc.CallOption) (*MsgUpdateChainParamsResponse, error) {
	out := new(MsgUpdateChainParamsResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/UpdateChainParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveChainParams(ctx context.Context, in *MsgRemoveChainParams, opts ...grpc.CallOption) (*MsgRemoveChainParamsResponse, error) {
	out := new(MsgRemoveChainParamsResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/RemoveChainParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteBlame(ctx context.Context, in *MsgVoteBlame, opts ...grpc.CallOption) (*MsgVoteBlameResponse, error) {
	out := new(MsgVoteBlameResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/VoteBlame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateKeygen(ctx context.Context, in *MsgUpdateKeygen, opts ...grpc.CallOption) (*MsgUpdateKeygenResponse, error) {
	out := new(MsgUpdateKeygenResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/UpdateKeygen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteBlockHeader(ctx context.Context, in *MsgVoteBlockHeader, opts ...grpc.CallOption) (*MsgVoteBlockHeaderResponse, error) {
	out := new(MsgVoteBlockHeaderResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/VoteBlockHeader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ResetChainNonces(ctx context.Context, in *MsgResetChainNonces, opts ...grpc.CallOption) (*MsgResetChainNoncesResponse, error) {
	out := new(MsgResetChainNoncesResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/ResetChainNonces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteTSS(ctx context.Context, in *MsgVoteTSS, opts ...grpc.CallOption) (*MsgVoteTSSResponse, error) {
	out := new(MsgVoteTSSResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/VoteTSS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EnableCCTX(ctx context.Context, in *MsgEnableCCTX, opts ...grpc.CallOption) (*MsgEnableCCTXResponse, error) {
	out := new(MsgEnableCCTXResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/EnableCCTX", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DisableCCTX(ctx context.Context, in *MsgDisableCCTX, opts ...grpc.CallOption) (*MsgDisableCCTXResponse, error) {
	out := new(MsgDisableCCTXResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/DisableCCTX", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DisableFastConfirmation(ctx context.Context, in *MsgDisableFastConfirmation, opts ...grpc.CallOption) (*MsgDisableFastConfirmationResponse, error) {
	out := new(MsgDisableFastConfirmationResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/DisableFastConfirmation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateGasPriceIncreaseFlags(ctx context.Context, in *MsgUpdateGasPriceIncreaseFlags, opts ...grpc.CallOption) (*MsgUpdateGasPriceIncreaseFlagsResponse, error) {
	out := new(MsgUpdateGasPriceIncreaseFlagsResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/UpdateGasPriceIncreaseFlags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateOperationalFlags(ctx context.Context, in *MsgUpdateOperationalFlags, opts ...grpc.CallOption) (*MsgUpdateOperationalFlagsResponse, error) {
	out := new(MsgUpdateOperationalFlagsResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/UpdateOperationalFlags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateOperationalChainParams(ctx context.Context, in *MsgUpdateOperationalChainParams, opts ...grpc.CallOption) (*MsgUpdateOperationalChainParamsResponse, error) {
	out := new(MsgUpdateOperationalChainParamsResponse)
	err := c.cc.Invoke(ctx, "/musechain.musecore.observer.Msg/UpdateOperationalChainParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	AddObserver(context.Context, *MsgAddObserver) (*MsgAddObserverResponse, error)
	UpdateObserver(context.Context, *MsgUpdateObserver) (*MsgUpdateObserverResponse, error)
	UpdateChainParams(context.Context, *MsgUpdateChainParams) (*MsgUpdateChainParamsResponse, error)
	RemoveChainParams(context.Context, *MsgRemoveChainParams) (*MsgRemoveChainParamsResponse, error)
	VoteBlame(context.Context, *MsgVoteBlame) (*MsgVoteBlameResponse, error)
	UpdateKeygen(context.Context, *MsgUpdateKeygen) (*MsgUpdateKeygenResponse, error)
	VoteBlockHeader(context.Context, *MsgVoteBlockHeader) (*MsgVoteBlockHeaderResponse, error)
	ResetChainNonces(context.Context, *MsgResetChainNonces) (*MsgResetChainNoncesResponse, error)
	VoteTSS(context.Context, *MsgVoteTSS) (*MsgVoteTSSResponse, error)
	EnableCCTX(context.Context, *MsgEnableCCTX) (*MsgEnableCCTXResponse, error)
	DisableCCTX(context.Context, *MsgDisableCCTX) (*MsgDisableCCTXResponse, error)
	DisableFastConfirmation(context.Context, *MsgDisableFastConfirmation) (*MsgDisableFastConfirmationResponse, error)
	UpdateGasPriceIncreaseFlags(context.Context, *MsgUpdateGasPriceIncreaseFlags) (*MsgUpdateGasPriceIncreaseFlagsResponse, error)
	UpdateOperationalFlags(context.Context, *MsgUpdateOperationalFlags) (*MsgUpdateOperationalFlagsResponse, error)
	UpdateOperationalChainParams(context.Context, *MsgUpdateOperationalChainParams) (*MsgUpdateOperationalChainParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AddObserver(ctx context.Context, req *MsgAddObserver) (*MsgAddObserverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddObserver not implemented")
}
func (*UnimplementedMsgServer) UpdateObserver(ctx context.Context, req *MsgUpdateObserver) (*MsgUpdateObserverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObserver not implemented")
}
func (*UnimplementedMsgServer) UpdateChainParams(ctx context.Context, req *MsgUpdateChainParams) (*MsgUpdateChainParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChainParams not implemented")
}
func (*UnimplementedMsgServer) RemoveChainParams(ctx context.Context, req *MsgRemoveChainParams) (*MsgRemoveChainParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveChainParams not implemented")
}
func (*UnimplementedMsgServer) VoteBlame(ctx context.Context, req *MsgVoteBlame) (*MsgVoteBlameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteBlame not implemented")
}
func (*UnimplementedMsgServer) UpdateKeygen(ctx context.Context, req *MsgUpdateKeygen) (*MsgUpdateKeygenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateKeygen not implemented")
}
func (*UnimplementedMsgServer) VoteBlockHeader(ctx context.Context, req *MsgVoteBlockHeader) (*MsgVoteBlockHeaderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteBlockHeader not implemented")
}
func (*UnimplementedMsgServer) ResetChainNonces(ctx context.Context, req *MsgResetChainNonces) (*MsgResetChainNoncesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetChainNonces not implemented")
}
func (*UnimplementedMsgServer) VoteTSS(ctx context.Context, req *MsgVoteTSS) (*MsgVoteTSSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteTSS not implemented")
}
func (*UnimplementedMsgServer) EnableCCTX(ctx context.Context, req *MsgEnableCCTX) (*MsgEnableCCTXResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableCCTX not implemented")
}
func (*UnimplementedMsgServer) DisableCCTX(ctx context.Context, req *MsgDisableCCTX) (*MsgDisableCCTXResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableCCTX not implemented")
}
func (*UnimplementedMsgServer) DisableFastConfirmation(ctx context.Context, req *MsgDisableFastConfirmation) (*MsgDisableFastConfirmationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableFastConfirmation not implemented")
}
func (*UnimplementedMsgServer) UpdateGasPriceIncreaseFlags(ctx context.Context, req *MsgUpdateGasPriceIncreaseFlags) (*MsgUpdateGasPriceIncreaseFlagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGasPriceIncreaseFlags not implemented")
}
func (*UnimplementedMsgServer) UpdateOperationalFlags(ctx context.Context, req *MsgUpdateOperationalFlags) (*MsgUpdateOperationalFlagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOperationalFlags not implemented")
}
func (*UnimplementedMsgServer) UpdateOperationalChainParams(ctx context.Context, req *MsgUpdateOperationalChainParams) (*MsgUpdateOperationalChainParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOperationalChainParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AddObserver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddObserver)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddObserver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/AddObserver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddObserver(ctx, req.(*MsgAddObserver))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateObserver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateObserver)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateObserver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/UpdateObserver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateObserver(ctx, req.(*MsgUpdateObserver))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateChainParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateChainParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateChainParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/UpdateChainParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateChainParams(ctx, req.(*MsgUpdateChainParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveChainParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveChainParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveChainParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/RemoveChainParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveChainParams(ctx, req.(*MsgRemoveChainParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteBlame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteBlame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteBlame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/VoteBlame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteBlame(ctx, req.(*MsgVoteBlame))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateKeygen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateKeygen)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateKeygen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/UpdateKeygen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateKeygen(ctx, req.(*MsgUpdateKeygen))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteBlockHeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteBlockHeader)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteBlockHeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/VoteBlockHeader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteBlockHeader(ctx, req.(*MsgVoteBlockHeader))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ResetChainNonces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgResetChainNonces)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ResetChainNonces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/ResetChainNonces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ResetChainNonces(ctx, req.(*MsgResetChainNonces))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteTSS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteTSS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteTSS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/VoteTSS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteTSS(ctx, req.(*MsgVoteTSS))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EnableCCTX_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEnableCCTX)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EnableCCTX(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/EnableCCTX",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EnableCCTX(ctx, req.(*MsgEnableCCTX))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DisableCCTX_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDisableCCTX)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DisableCCTX(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/DisableCCTX",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DisableCCTX(ctx, req.(*MsgDisableCCTX))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DisableFastConfirmation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDisableFastConfirmation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DisableFastConfirmation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/DisableFastConfirmation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DisableFastConfirmation(ctx, req.(*MsgDisableFastConfirmation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateGasPriceIncreaseFlags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateGasPriceIncreaseFlags)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateGasPriceIncreaseFlags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/UpdateGasPriceIncreaseFlags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateGasPriceIncreaseFlags(ctx, req.(*MsgUpdateGasPriceIncreaseFlags))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateOperationalFlags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateOperationalFlags)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateOperationalFlags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/UpdateOperationalFlags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateOperationalFlags(ctx, req.(*MsgUpdateOperationalFlags))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateOperationalChainParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateOperationalChainParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateOperationalChainParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/musechain.musecore.observer.Msg/UpdateOperationalChainParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateOperationalChainParams(ctx, req.(*MsgUpdateOperationalChainParams))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "musechain.musecore.observer.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddObserver",
			Handler:    _Msg_AddObserver_Handler,
		},
		{
			MethodName: "UpdateObserver",
			Handler:    _Msg_UpdateObserver_Handler,
		},
		{
			MethodName: "UpdateChainParams",
			Handler:    _Msg_UpdateChainParams_Handler,
		},
		{
			MethodName: "RemoveChainParams",
			Handler:    _Msg_RemoveChainParams_Handler,
		},
		{
			MethodName: "VoteBlame",
			Handler:    _Msg_VoteBlame_Handler,
		},
		{
			MethodName: "UpdateKeygen",
			Handler:    _Msg_UpdateKeygen_Handler,
		},
		{
			MethodName: "VoteBlockHeader",
			Handler:    _Msg_VoteBlockHeader_Handler,
		},
		{
			MethodName: "ResetChainNonces",
			Handler:    _Msg_ResetChainNonces_Handler,
		},
		{
			MethodName: "VoteTSS",
			Handler:    _Msg_VoteTSS_Handler,
		},
		{
			MethodName: "EnableCCTX",
			Handler:    _Msg_EnableCCTX_Handler,
		},
		{
			MethodName: "DisableCCTX",
			Handler:    _Msg_DisableCCTX_Handler,
		},
		{
			MethodName: "DisableFastConfirmation",
			Handler:    _Msg_DisableFastConfirmation_Handler,
		},
		{
			MethodName: "UpdateGasPriceIncreaseFlags",
			Handler:    _Msg_UpdateGasPriceIncreaseFlags_Handler,
		},
		{
			MethodName: "UpdateOperationalFlags",
			Handler:    _Msg_UpdateOperationalFlags_Handler,
		},
		{
			MethodName: "UpdateOperationalChainParams",
			Handler:    _Msg_UpdateOperationalChainParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "musechain/musecore/observer/tx.proto",
}

func (m *MsgUpdateObserver) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateObserver) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateObserver) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdateReason != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UpdateReason))
		i--
		dAtA[i] = 0x20
	}
	if len(m.NewObserverAddress) > 0 {
		i -= len(m.NewObserverAddress)
		copy(dAtA[i:], m.NewObserverAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewObserverAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OldObserverAddress) > 0 {
		i -= len(m.OldObserverAddress)
		copy(dAtA[i:], m.OldObserverAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldObserverAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateObserverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateObserverResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateObserverResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteBlockHeader) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteBlockHeader) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteBlockHeader) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Header.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if m.Height != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x20
	}
	if len(m.BlockHash) > 0 {
		i -= len(m.BlockHash)
		copy(dAtA[i:], m.BlockHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BlockHash)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ChainId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteBlockHeaderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteBlockHeaderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteBlockHeaderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.VoteFinalized {
		i--
		if m.VoteFinalized {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.BallotCreated {
		i--
		if m.BallotCreated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateChainParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateChainParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateChainParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ChainParams != nil {
		{
			size, err := m.ChainParams.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateChainParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateChainParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateChainParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOperationalChainParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOperationalChainParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOperationalChainParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DisableTssBlockScan {
		i--
		if m.DisableTssBlockScan {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	{
		size, err := m.ConfirmationParams.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x4a
	if m.OutboundScheduleLookahead != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OutboundScheduleLookahead))
		i--
		dAtA[i] = 0x40
	}
	if m.OutboundScheduleInterval != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OutboundScheduleInterval))
		i--
		dAtA[i] = 0x38
	}
	if m.WatchUtxoTicker != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.WatchUtxoTicker))
		i--
		dAtA[i] = 0x30
	}
	if m.OutboundTicker != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OutboundTicker))
		i--
		dAtA[i] = 0x28
	}
	if m.InboundTicker != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.InboundTicker))
		i--
		dAtA[i] = 0x20
	}
	if m.GasPriceTicker != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GasPriceTicker))
		i--
		dAtA[i] = 0x18
	}
	if m.ChainId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOperationalChainParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOperationalChainParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOperationalChainParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveChainParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveChainParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveChainParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ChainId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveChainParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveChainParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveChainParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddObserver) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddObserver) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddObserver) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AddNodeAccountOnly {
		i--
		if m.AddNodeAccountOnly {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.MuseclientGranteePubkey) > 0 {
		i -= len(m.MuseclientGranteePubkey)
		copy(dAtA[i:], m.MuseclientGranteePubkey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MuseclientGranteePubkey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObserverAddress) > 0 {
		i -= len(m.ObserverAddress)
		copy(dAtA[i:], m.ObserverAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ObserverAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddObserverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddObserverResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddObserverResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteBlame) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteBlame) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteBlame) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.BlameInfo.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.ChainId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteBlameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteBlameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteBlameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKeygen) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKeygen) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKeygen) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Block != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Block))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKeygenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKeygenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKeygenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgResetChainNonces) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetChainNonces) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetChainNonces) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ChainNonceHigh != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainNonceHigh))
		i--
		dAtA[i] = 0x20
	}
	if m.ChainNonceLow != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainNonceLow))
		i--
		dAtA[i] = 0x18
	}
	if m.ChainId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgResetChainNoncesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetChainNoncesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetChainNoncesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteTSS) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteTSS) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteTSS) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if m.KeygenMuseHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.KeygenMuseHeight))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TssPubkey) > 0 {
		i -= len(m.TssPubkey)
		copy(dAtA[i:], m.TssPubkey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TssPubkey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteTSSResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteTSSResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteTSSResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.KeygenSuccess {
		i--
		if m.KeygenSuccess {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.VoteFinalized {
		i--
		if m.VoteFinalized {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.BallotCreated {
		i--
		if m.BallotCreated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgEnableCCTX) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnableCCTX) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnableCCTX) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EnableOutbound {
		i--
		if m.EnableOutbound {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.EnableInbound {
		i--
		if m.EnableInbound {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEnableCCTXResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnableCCTXResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnableCCTXResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDisableCCTX) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisableCCTX) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisableCCTX) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DisableOutbound {
		i--
		if m.DisableOutbound {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.DisableInbound {
		i--
		if m.DisableInbound {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDisableCCTXResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisableCCTXResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisableCCTXResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateGasPriceIncreaseFlags) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateGasPriceIncreaseFlags) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateGasPriceIncreaseFlags) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.GasPriceIncreaseFlags.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateGasPriceIncreaseFlagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateGasPriceIncreaseFlagsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateGasPriceIncreaseFlagsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOperationalFlags) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOperationalFlags) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOperationalFlags) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.OperationalFlags.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOperationalFlagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOperationalFlagsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOperationalFlagsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDisableFastConfirmation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisableFastConfirmation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisableFastConfirmation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ChainId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChainId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDisableFastConfirmationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisableFastConfirmationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisableFastConfirmationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateObserver) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldObserverAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewObserverAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.UpdateReason != 0 {
		n += 1 + sovTx(uint64(m.UpdateReason))
	}
	return n
}

func (m *MsgUpdateObserverResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteBlockHeader) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainId != 0 {
		n += 1 + sovTx(uint64(m.ChainId))
	}
	l = len(m.BlockHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovTx(uint64(m.Height))
	}
	l = m.Header.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgVoteBlockHeaderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BallotCreated {
		n += 2
	}
	if m.VoteFinalized {
		n += 2
	}
	return n
}

func (m *MsgUpdateChainParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainParams != nil {
		l = m.ChainParams.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateChainParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateOperationalChainParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainId != 0 {
		n += 1 + sovTx(uint64(m.ChainId))
	}
	if m.GasPriceTicker != 0 {
		n += 1 + sovTx(uint64(m.GasPriceTicker))
	}
	if m.InboundTicker != 0 {
		n += 1 + sovTx(uint64(m.InboundTicker))
	}
	if m.OutboundTicker != 0 {
		n += 1 + sovTx(uint64(m.OutboundTicker))
	}
	if m.WatchUtxoTicker != 0 {
		n += 1 + sovTx(uint64(m.WatchUtxoTicker))
	}
	if m.OutboundScheduleInterval != 0 {
		n += 1 + sovTx(uint64(m.OutboundScheduleInterval))
	}
	if m.OutboundScheduleLookahead != 0 {
		n += 1 + sovTx(uint64(m.OutboundScheduleLookahead))
	}
	l = m.ConfirmationParams.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.DisableTssBlockScan {
		n += 2
	}
	return n
}

func (m *MsgUpdateOperationalChainParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveChainParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainId != 0 {
		n += 1 + sovTx(uint64(m.ChainId))
	}
	return n
}

func (m *MsgRemoveChainParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddObserver) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ObserverAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MuseclientGranteePubkey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AddNodeAccountOnly {
		n += 2
	}
	return n
}

func (m *MsgAddObserverResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteBlame) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainId != 0 {
		n += 1 + sovTx(uint64(m.ChainId))
	}
	l = m.BlameInfo.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgVoteBlameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateKeygen) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Block != 0 {
		n += 1 + sovTx(uint64(m.Block))
	}
	return n
}

func (m *MsgUpdateKeygenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgResetChainNonces) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainId != 0 {
		n += 1 + sovTx(uint64(m.ChainId))
	}
	if m.ChainNonceLow != 0 {
		n += 1 + sovTx(uint64(m.ChainNonceLow))
	}
	if m.ChainNonceHigh != 0 {
		n += 1 + sovTx(uint64(m.ChainNonceHigh))
	}
	return n
}

func (m *MsgResetChainNoncesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteTSS) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TssPubkey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.KeygenMuseHeight != 0 {
		n += 1 + sovTx(uint64(m.KeygenMuseHeight))
	}
	if m.Status != 0 {
		n += 1 + sovTx(uint64(m.Status))
	}
	return n
}

func (m *MsgVoteTSSResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BallotCreated {
		n += 2
	}
	if m.VoteFinalized {
		n += 2
	}
	if m.KeygenSuccess {
		n += 2
	}
	return n
}

func (m *MsgEnableCCTX) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EnableInbound {
		n += 2
	}
	if m.EnableOutbound {
		n += 2
	}
	return n
}

func (m *MsgEnableCCTXResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDisableCCTX) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.DisableInbound {
		n += 2
	}
	if m.DisableOutbound {
		n += 2
	}
	return n
}

func (m *MsgDisableCCTXResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateGasPriceIncreaseFlags) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.GasPriceIncreaseFlags.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateGasPriceIncreaseFlagsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateOperationalFlags) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.OperationalFlags.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateOperationalFlagsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDisableFastConfirmation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChainId != 0 {
		n += 1 + sovTx(uint64(m.ChainId))
	}
	return n
}

func (m *MsgDisableFastConfirmationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateObserver) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateObserver: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateObserver: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldObserverAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldObserverAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewObserverAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewObserverAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateReason", wireType)
			}
			m.UpdateReason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateReason |= ObserverUpdateReason(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateObserverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateObserverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateObserverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteBlockHeader) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteBlockHeader: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteBlockHeader: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			m.ChainId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BlockHash = append(m.BlockHash[:0], dAtA[iNdEx:postIndex]...)
			if m.BlockHash == nil {
				m.BlockHash = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Header.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteBlockHeaderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteBlockHeaderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteBlockHeaderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BallotCreated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BallotCreated = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteFinalized", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VoteFinalized = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateChainParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateChainParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateChainParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChainParams == nil {
				m.ChainParams = &ChainParams{}
			}
			if err := m.ChainParams.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateChainParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateChainParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateChainParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOperationalChainParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOperationalChainParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOperationalChainParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			m.ChainId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasPriceTicker", wireType)
			}
			m.GasPriceTicker = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GasPriceTicker |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InboundTicker", wireType)
			}
			m.InboundTicker = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InboundTicker |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutboundTicker", wireType)
			}
			m.OutboundTicker = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OutboundTicker |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WatchUtxoTicker", wireType)
			}
			m.WatchUtxoTicker = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WatchUtxoTicker |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutboundScheduleInterval", wireType)
			}
			m.OutboundScheduleInterval = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OutboundScheduleInterval |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutboundScheduleLookahead", wireType)
			}
			m.OutboundScheduleLookahead = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OutboundScheduleLookahead |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmationParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ConfirmationParams.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableTssBlockScan", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisableTssBlockScan = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOperationalChainParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOperationalChainParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOperationalChainParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveChainParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveChainParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveChainParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			m.ChainId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveChainParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveChainParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveChainParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddObserver) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddObserver: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddObserver: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObserverAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObserverAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MuseclientGranteePubkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MuseclientGranteePubkey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddNodeAccountOnly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddNodeAccountOnly = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddObserverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddObserverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddObserverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteBlame) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteBlame: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteBlame: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			m.ChainId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlameInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BlameInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteBlameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteBlameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteBlameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKeygen) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKeygen: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKeygen: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Block", wireType)
			}
			m.Block = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Block |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKeygenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKeygenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKeygenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResetChainNonces) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetChainNonces: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetChainNonces: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			m.ChainId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainNonceLow", wireType)
			}
			m.ChainNonceLow = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainNonceLow |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainNonceHigh", wireType)
			}
			m.ChainNonceHigh = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainNonceHigh |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResetChainNoncesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetChainNoncesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetChainNoncesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteTSS) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteTSS: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteTSS: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TssPubkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TssPubkey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeygenMuseHeight", wireType)
			}
			m.KeygenMuseHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeygenMuseHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= chains.ReceiveStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteTSSResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteTSSResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteTSSResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BallotCreated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BallotCreated = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteFinalized", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VoteFinalized = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeygenSuccess", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.KeygenSuccess = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnableCCTX) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnableCCTX: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnableCCTX: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableInbound", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableInbound = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableOutbound", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableOutbound = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnableCCTXResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnableCCTXResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnableCCTXResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisableCCTX) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisableCCTX: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisableCCTX: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableInbound", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisableInbound = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableOutbound", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisableOutbound = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisableCCTXResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisableCCTXResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisableCCTXResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateGasPriceIncreaseFlags) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateGasPriceIncreaseFlags: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateGasPriceIncreaseFlags: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasPriceIncreaseFlags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.GasPriceIncreaseFlags.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateGasPriceIncreaseFlagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateGasPriceIncreaseFlagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateGasPriceIncreaseFlagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOperationalFlags) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOperationalFlags: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOperationalFlags: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperationalFlags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.OperationalFlags.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOperationalFlagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOperationalFlagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOperationalFlagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisableFastConfirmation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisableFastConfirmation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisableFastConfirmation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			m.ChainId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisableFastConfirmationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisableFastConfirmationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisableFastConfirmationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
