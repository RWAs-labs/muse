#!/bin/bash

# This script is used to start MuseClient for the localnet
# An optional argument can be passed and can have the following value:
# background: start the MuseClient in the background, this prevent the image from being stopped when MuseClient must be restarted

/usr/sbin/sshd

HOSTNAME=$(hostname)
export MUSECLIENTD_SUPERVISOR_ENABLE_AUTO_DOWNLOAD=true

# sepolia is used in chain migration tests, this functions set the sepolia endpoint in the museclient_config.json
set_sepolia_endpoint() {
  jq '.EVMChainConfigs."11155111".Endpoint = "http://eth2:8545"' /root/.musecored/config/museclient_config.json > tmp.json && mv tmp.json /root/.musecored/config/museclient_config.json
}

# import a relayer private key (e.g. Solana relayer key)
import_relayer_key() {
  local num="$1"

  # import solana (network=7) relayer private key
  privkey_solana=$(yq -r ".observer_relayer_accounts.relayer_accounts[${num}].solana_private_key" /root/config.yml)
  museclientd relayer import-key --network=7 --private-key="$privkey_solana" --password=pass_relayerkey
}

PREPARAMS_PATH="/root/preparams/${HOSTNAME}.json"
if [[ -n "${MUSECLIENTD_GEN_PREPARAMS}" ]]; then
  # generate pre-params as early as possible
  # to reach keygen height on schedule
  if [ ! -f "$PREPARAMS_PATH" ]; then
    museclientd gen-pre-params "$PREPARAMS_PATH"
  fi
else
  echo "Using static preparams"
  cp "/root/static-preparams/${HOSTNAME}.json" "${PREPARAMS_PATH}"
fi

# Wait for authorized_keys file to exist (generated by musecore0)
while [ ! -f ~/.ssh/authorized_keys ]; do
    echo "Waiting for authorized_keys file to exist..."
    sleep 1
done

# need to wait for musecore0 block 1 to be available
while curl -s musecore0:26657/block?height=1 | jq -e '.error != null' > /dev/null; do
    echo "Waiting for musecore0 block 1"
    sleep 5
done

# read HOTKEY_BACKEND env var for hotkey keyring backend and set default to test
BACKEND="test"
if [ "$HOTKEY_BACKEND" == "file" ]; then
    BACKEND="file"
fi

num=$(echo $HOSTNAME | tr -dc '0-9')
node="musecore$num"

while [ ! -f $HOME/.musecored/os.json ]; do
    echo "Waiting for musecore to exchange os.json file..."
    sleep 1
done
operator=$(cat $HOME/.musecored/os.json | jq '.ObserverAddress' )
operatorAddress=$(echo "$operator" | tr -d '"')
echo "operatorAddress: $operatorAddress"

# create the path that holds observer relayer private keys (e.g. Solana relayer key)
RELAYER_KEY_PATH="$HOME/.musecored/relayer-keys"
mkdir -p "${RELAYER_KEY_PATH}"

mkdir -p "$HOME/.tss/"
address_book_path="$HOME/.tss/address_book.seed"
if [[ ! -f "$address_book_path" ]]; then
    musee2e local get-museclient-bootstrap > $address_book_path
fi

MYIP=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)

echo "Start museclientd"

# skip initialization if the config file already exists (museclientd init has already been run)
if [[ $HOSTNAME == "museclient0" && ! -f ~/.musecored/config/museclient_config.json ]] then
    museclientd init --musecore-url musecore0 --chain-id athens_101-1 \
        --operator "$operatorAddress" --log-format=text --public-ip "$MYIP" \
        --keyring-backend "$BACKEND" --pre-params "$PREPARAMS_PATH"

    # import relayer private key for museclient0
    import_relayer_key 0

    # if eth2 is enabled, set the endpoint in the museclient_config.json
    # in this case, the additional evm is represented with the sepolia chain, we set manually the eth2 endpoint to the sepolia chain (11155111 -> http://eth2:8545)
    # in /root/.musecored/config/museclient_config.json
    if host eth2 > /dev/null; then
     echo "enabling additional evm (eth2)"
     set_sepolia_endpoint
    fi
fi

if [[ $HOSTNAME != "museclient0" && ! -f ~/.musecored/config/museclient_config.json ]] then
  if [[ $HOSTNAME == "museclient-new-validator" ]]; then
      num=1
      node="musecore-new-validator"
  else
      num=$(echo $HOSTNAME | tr -dc '0-9')
      node="musecore$num"
  fi
  museclientd init --musecore-url "$node" --chain-id athens_101-1 --operator "$operatorAddress" --log-format=text --public-ip "$MYIP" --log-level 1 --keyring-backend "$BACKEND" --pre-params "$PREPARAMS_PATH"

  # import relayer private key for museclient{$num}
  import_relayer_key "${num}"

  # check if the option is additional-evm
  # in this case, the additional evm is represented with the sepolia chain, we set manually the eth2 endpoint to the sepolia chain (11155111 -> http://eth2:8545)
  # in /root/.musecored/config/museclient_config.json
  if [[ -n $ADDITIONAL_EVM ]]; then
   set_sepolia_endpoint
  fi
fi

# merge museclient-config-overlay.json into museclient_config.json if specified
if [[ -f /root/museclient-config-overlay.json ]]; then
  jq -s '.[0] * .[1]' /root/.musecored/config/museclient_config.json /root/museclient-config-overlay.json > /tmp/merged_config.json
  mv /tmp/merged_config.json /root/.musecored/config/museclient_config.json
fi

# ensure restricted addresses config is initialized to avoid log spam
echo "[]" > ~/.musecored/config/museclient_restricted_addresses.json

echo "Running museclientd via supervisor"

museclientd-supervisor start < /root/password.file