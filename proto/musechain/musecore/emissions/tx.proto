syntax = "proto3";
package musechain.musecore.emissions;

import "musechain/musecore/emissions/params.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/RWAs-labs/muse/x/emissions/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc WithdrawEmission(MsgWithdrawEmission)
      returns (MsgWithdrawEmissionResponse);
}

message MsgWithdrawEmission {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string amount = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgWithdrawEmissionResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  string authority = 1;
  Params params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}