syntax = "proto3";
package musechain.musecore.observer;

import "gogoproto/gogo.proto";
import "musechain/musecore/observer/blame.proto";
import "musechain/musecore/observer/crosschain_flags.proto";
import "musechain/musecore/observer/observer.proto";
import "musechain/musecore/observer/params.proto";
import "musechain/musecore/observer/pending_nonces.proto";
import "musechain/musecore/observer/tss.proto";
import "musechain/musecore/observer/operational.proto";
import "musechain/musecore/observer/confirmation_params.proto";
import "musechain/musecore/pkg/chains/chains.proto";
import "musechain/musecore/pkg/proofs/proofs.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/RWAs-labs/muse/x/observer/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc AddObserver(MsgAddObserver) returns (MsgAddObserverResponse);
  rpc UpdateObserver(MsgUpdateObserver) returns (MsgUpdateObserverResponse);
  rpc UpdateChainParams(MsgUpdateChainParams)
      returns (MsgUpdateChainParamsResponse);
  rpc RemoveChainParams(MsgRemoveChainParams)
      returns (MsgRemoveChainParamsResponse);
  rpc VoteBlame(MsgVoteBlame) returns (MsgVoteBlameResponse);
  rpc UpdateKeygen(MsgUpdateKeygen) returns (MsgUpdateKeygenResponse);
  rpc VoteBlockHeader(MsgVoteBlockHeader) returns (MsgVoteBlockHeaderResponse);
  rpc ResetChainNonces(MsgResetChainNonces)
      returns (MsgResetChainNoncesResponse);
  rpc VoteTSS(MsgVoteTSS) returns (MsgVoteTSSResponse);
  rpc EnableCCTX(MsgEnableCCTX) returns (MsgEnableCCTXResponse);
  rpc DisableCCTX(MsgDisableCCTX) returns (MsgDisableCCTXResponse);
  rpc DisableFastConfirmation(MsgDisableFastConfirmation)
      returns (MsgDisableFastConfirmationResponse);
  rpc UpdateGasPriceIncreaseFlags(MsgUpdateGasPriceIncreaseFlags)
      returns (MsgUpdateGasPriceIncreaseFlagsResponse);
  rpc UpdateOperationalFlags(MsgUpdateOperationalFlags)
      returns (MsgUpdateOperationalFlagsResponse);
  rpc UpdateOperationalChainParams(MsgUpdateOperationalChainParams)
      returns (MsgUpdateOperationalChainParamsResponse);
}

message MsgUpdateObserver {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string old_observer_address = 2;
  string new_observer_address = 3;
  ObserverUpdateReason update_reason = 4;
}
message MsgUpdateObserverResponse {}

message MsgVoteBlockHeader {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  int64 chain_id = 2;
  bytes block_hash = 3;
  int64 height = 4;
  pkg.proofs.HeaderData header = 5 [ (gogoproto.nullable) = false ];
}

message MsgVoteBlockHeaderResponse {
  bool ballot_created = 1;
  bool vote_finalized = 2;
}

message MsgUpdateChainParams {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  ChainParams chainParams = 2;
}

message MsgUpdateChainParamsResponse {}

message MsgUpdateOperationalChainParams {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  int64 chain_id = 2;
  uint64 gas_price_ticker = 3;
  uint64 inbound_ticker = 4;
  uint64 outbound_ticker = 5;
  uint64 watch_utxo_ticker = 6;
  int64 outbound_schedule_interval = 7;
  int64 outbound_schedule_lookahead = 8;
  ConfirmationParams confirmation_params = 9 [ (gogoproto.nullable) = false ];
  bool disable_tss_block_scan = 10;
}

message MsgUpdateOperationalChainParamsResponse {}

message MsgRemoveChainParams {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  int64 chain_id = 2;
}

message MsgRemoveChainParamsResponse {}

message MsgAddObserver {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string observer_address = 2;
  string museclient_grantee_pubkey = 3;
  bool add_node_account_only = 4;
}

message MsgAddObserverResponse {}

message MsgVoteBlame {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  int64 chain_id = 2;
  Blame blame_info = 3 [ (gogoproto.nullable) = false ];
}

message MsgVoteBlameResponse {}

message MsgUpdateKeygen {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  int64 block = 2;
}

message MsgUpdateKeygenResponse {}

message MsgResetChainNonces {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  int64 chain_id = 2;
  int64 chain_nonce_low = 3;
  int64 chain_nonce_high = 4;
}

message MsgResetChainNoncesResponse {}

message MsgVoteTSS {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string tss_pubkey = 2;
  int64 keygen_muse_height = 3;
  pkg.chains.ReceiveStatus status = 4;
}

message MsgVoteTSSResponse {
  bool ballot_created = 1;
  bool vote_finalized = 2;
  bool keygen_success = 3;
}

message MsgEnableCCTX {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  bool enableInbound = 2;
  bool enableOutbound = 3;
}

message MsgEnableCCTXResponse {}

message MsgDisableCCTX {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  bool disableInbound = 2;
  bool disableOutbound = 3;
}

message MsgDisableCCTXResponse {}

message MsgUpdateGasPriceIncreaseFlags {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  GasPriceIncreaseFlags gasPriceIncreaseFlags = 2
      [ (gogoproto.nullable) = false ];
}

message MsgUpdateGasPriceIncreaseFlagsResponse {}

message MsgUpdateOperationalFlags {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  OperationalFlags operational_flags = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateOperationalFlagsResponse {}

// MsgDisableFastConfirmation is used to disable fast confirmation for given
// chain ID.
message MsgDisableFastConfirmation {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  int64 chain_id = 2;
}
message MsgDisableFastConfirmationResponse {}
