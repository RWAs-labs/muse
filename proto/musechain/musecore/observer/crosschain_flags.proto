syntax = "proto3";
package musechain.musecore.observer;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/RWAs-labs/muse/x/observer/types";

message GasPriceIncreaseFlags {
  int64 epochLength = 1;
  google.protobuf.Duration retryInterval = 2
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  uint32 gasPriceIncreasePercent = 3;

  // Maximum gas price increase in percent of the median gas price
  // Default is used if 0
  uint32 gasPriceIncreaseMax = 4;

  // Maximum number of pending crosschain transactions to check for gas price
  // increase
  uint32 maxPendingCctxs = 5;

  // Retry interval for Bitcoin chain pending cctx gas price increase
  google.protobuf.Duration retryIntervalBTC = 6
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
}

message CrosschainFlags {
  bool isInboundEnabled = 1;
  bool isOutboundEnabled = 2;
  GasPriceIncreaseFlags gasPriceIncreaseFlags = 3;
}

message LegacyCrosschainFlags {
  bool isInboundEnabled = 1;
  bool isOutboundEnabled = 2;
  GasPriceIncreaseFlags gasPriceIncreaseFlags = 3;
}
